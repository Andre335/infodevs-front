{"map":"{\"version\":3,\"sources\":[\"/home/andreafg/Documents/infodevs-front/infodev-front/src/ImovelMaps.js\",\"/home/andreafg/Documents/infodevs-front/infodev-front/src/App.js\",\"/home/andreafg/Documents/infodevs-front/infodev-front/src/serviceWorker.js\",\"/home/andreafg/Documents/infodevs-front/infodev-front/src/index.js\"],\"names\":[\"ImovelMaps\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"lat\",\"lng\",\"zoom\",\"position\",\"react_default\",\"a\",\"createElement\",\"Map\",\"center\",\"TileLayer\",\"attribution\",\"url\",\"Marker\",\"Popup\",\"Component\",\"App\",\"className\",\"rel\",\"href\",\"integrity\",\"crossorigin\",\"src\",\"src_ImovelMaps\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"uTA+BeA,cA3BX,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACVC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QACKI,MAAQ,CACXC,IAAK,OACLC,KAAM,IACNC,KAAM,IALEV,wEAUZ,IAAMW,EAAW,CAACR,KAAKI,MAAMC,IAAKL,KAAKI,MAAME,KAC7C,OACEG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,OAAQL,EAAUD,KAAMP,KAAKI,MAAMG,MACtCE,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,YAAY,0EACZC,IAAI,uDAENP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQT,SAAUA,GAChBC,EAAAC,EAAAC,cAACO,EAAA,EAAD,KAAA,wBACuBT,EAAAC,EAAAC,cAAA,KAAA,MADvB,kCAnBaQ,EAAAA,WCuBVC,mLApBX,OACEX,EAAAC,EAAAC,cAAA,MAAA,CAAKU,UAAU,OACbZ,EAAAC,EAAAC,cAAA,OAAA,KACIF,EAAAC,EAAAC,cAAA,OAAA,CAAMW,IAAI,aAAaC,KAAK,mDAC1BC,UAAU,kGACVC,YAAY,KAEdhB,EAAAC,EAAAC,cAAA,SAAA,CAAQe,IAAI,kDACVF,UAAU,kGACVC,YAAY,MAElBhB,EAAAC,EAAAC,cAAA,SAAA,CAAQU,UAAU,cAAlB,oBAGAZ,EAAAC,EAAAC,cAACgB,EAAD,cAhBUR,EAAAA,WCQES,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,EAAAA,EAASC,OAAOzB,EAAAC,EAAAC,cAACwB,EAAD,MAASC,SAASC,eAAe,SDqH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"import React, { Component } from 'react';\\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\\n\\nclass ImovelMaps extends Component {\\n    constructor() {\\n        super();\\n        this.state = {\\n          lat: 51.505,\\n          lng: -0.09,\\n          zoom: 13,\\n        };\\n    }\\n  \\n    render() {\\n      const position = [this.state.lat, this.state.lng]\\n      return (\\n        <Map center={position} zoom={this.state.zoom}>\\n          <TileLayer\\n            attribution=\\\"&amp;copy <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\\\"\\n            url=\\\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\\\"\\n          />\\n          <Marker position={position}>\\n            <Popup>\\n              A pretty CSS3 popup. <br /> Easily customizable.\\n            </Popup>\\n          </Marker>\\n        </Map>\\n      )\\n    }\\n}\\n\\nexport default ImovelMaps;\",\"import React, { Component } from 'react';\\nimport './App.css';\\nimport ImovelMaps from './ImovelMaps';\\n\\nclass App extends Component {\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n        <head>\\n            <link rel=\\\"stylesheet\\\" href=\\\"https://unpkg.com/leaflet@1.3.4/dist/leaflet.css\\\"\\n              integrity=\\\"sha512-puBpdR0798OZvTTbP4A8Ix/l+A4dHDD0DGqYW6RQ+9jxkRFclaxxQb/SJAWZfWAkuyeQUytO7+7N4QKrDh+drA==\\\"\\n              crossorigin=\\\"\\\"/>\\n            \\n            <script src=\\\"https://unpkg.com/leaflet@1.3.4/dist/leaflet.js\\\"\\n              integrity=\\\"sha512-nMMmRyTVoLYqjP9hrbed9S+FzjZHW5gY1TWCHA5ckwXZBadntCNs8kEqAWdrb9O7rxbCaA4lKTIWjDXZxflOcA==\\\"\\n              crossorigin=\\\"\\\"></script>\\n        </head>\\n        <header className=\\\"App-header\\\">\\n            Mapa dos Imoveis\\n        </header>\\n        <ImovelMaps />\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA.\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      if (\\n        response.status === 404 ||\\n        response.headers.get('content-type').indexOf('javascript') === -1\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import 'bootstrap/dist/css/bootstrap.min.css';\\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\\nimport React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{45:function(e,t,a){e.exports=a(60)},54:function(e,t,a){},56:function(e,t,a){},60:function(e,t,a){\"use strict\";a.r(t);a(46),a(48);var n=a(1),r=a.n(n),o=a(18),c=a.n(o),l=(a(54),a(19)),i=a(20),s=a(34),u=a(21),p=a(35),m=(a(56),a(63)),h=a(65),d=a(62),b=a(64),f=function(e){function t(){var e;return Object(l.a)(this,t),(e=Object(s.a)(this,Object(u.a)(t).call(this))).state={lat:51.505,lng:-.09,zoom:13},e}return Object(p.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){var e=[this.state.lat,this.state.lng];return r.a.createElement(m.a,{center:e,zoom:this.state.zoom},r.a.createElement(h.a,{attribution:'&copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',url:\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"}),r.a.createElement(d.a,{position:e},r.a.createElement(b.a,null,\"A pretty CSS3 popup. \",r.a.createElement(\"br\",null),\" Easily customizable.\")))}}]),t}(n.Component),g=function(e){function t(){return Object(l.a)(this,t),Object(s.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"App\"},r.a.createElement(\"head\",null,r.a.createElement(\"link\",{rel:\"stylesheet\",href:\"https://unpkg.com/leaflet@1.3.4/dist/leaflet.css\",integrity:\"sha512-puBpdR0798OZvTTbP4A8Ix/l+A4dHDD0DGqYW6RQ+9jxkRFclaxxQb/SJAWZfWAkuyeQUytO7+7N4QKrDh+drA==\",crossorigin:\"\"}),r.a.createElement(\"script\",{src:\"https://unpkg.com/leaflet@1.3.4/dist/leaflet.js\",integrity:\"sha512-nMMmRyTVoLYqjP9hrbed9S+FzjZHW5gY1TWCHA5ckwXZBadntCNs8kEqAWdrb9O7rxbCaA4lKTIWjDXZxflOcA==\",crossorigin:\"\"})),r.a.createElement(\"header\",{className:\"App-header\"},\"Mapa dos Imoveis\"),r.a.createElement(f,null))}}]),t}(n.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));c.a.render(r.a.createElement(g,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[45,2,1]]]);","extractedComments":[]}